import Swinject

{% macro resolve_param param %}
  {% if param|annotated:"passthrough" %}arg{{param.name|upperFirstLetter}}{% else %}dep.resolve(){% endif %}
{% endmacro %}

class AnnotationAssembly: Assembly {
  func assemble(container: Container) {
  {% for type in types.all|annotated:"inject" %}
    {% for init in type.initializers|annotated:"register" %}

      container.register({{type.name}}.self) { dep{% for param in init.parameters|annotated:"passthrough" %}, arg{{param.name|upperFirstLetter}}{% endfor %} in
        {% filter removeNewlines:"leading" %}
        return {{type.name}}(
          {% for param in init.parameters %}
            {{param.argumentLabel}}: {% call resolve_param param %}
            {% ifnot forloop.last %}, {% endif %}
          {% endfor %}
        )
        {% endfilter %}
      }
    {% endfor %}
  {% endfor %}
  }
}
